name: Create and publish cloudflared Debian Docker image

on:
  schedule:
    - cron:  '17 17 * * *' 
  workflow_call:
  workflow_dispatch:
  push:
    branches: ['main']
    paths:
      - 'cloudflared/**'
      - '.github/workflows/build_cloudflared.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/cloudflared  
  DOCKER_FROM: 'debian-bullseye-slim'
 
jobs:
  check-latest-version:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Get cloudflared current version
        id: get_CLOUDFLARED_CURRENT_VERSION
        run: |
          echo CLOUDFLARED_CURRENT_VERSION=$(curl -s --head https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb |egrep 'location:' |egrep -o [0-9]{4}\.[0-9]+\.[0-9]+) >> $GITHUB_ENV

      - name: Echo cloudflared current version
        id: echo_CLOUDFLARED_CURRENT_VERSION
        run: echo ${{ env.CLOUDFLARED_CURRENT_VERSION }}
    outputs:
      CLOUDFLARED_CURRENT_VERSION: ${{ env.CLOUDFLARED_CURRENT_VERSION }}

  check-image-version:
    if: always()
    needs: check-latest-version
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@master
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull cloudflared image
        id: cloudflared_image_pull
        run: |
          docker pull ghcr.io/${{ env.IMAGE_NAME }}

      - name: Get image cloudflared version
        id: CLOUDFLARED_IMAGE_VERSION
        run: |
          echo CLOUDFLARED_IMAGE_VERSION=$(docker inspect ghcr.io/${{ env.IMAGE_NAME }} |egrep cloudflared_version | cut -d '"' -f 4) >> $GITHUB_ENV

      - name: Echo cloudflared image version
        id: echo_CLOUDFLARED_IMAGE_VERSION
        run: echo ${{ env.CLOUDFLARED_IMAGE_VERSION }}

    outputs:
      CLOUDFLARED_IMAGE_VERSION: ${{ env.CLOUDFLARED_IMAGE_VERSION }}

  build-and-push-image:
    if: ${{ always() }}
    needs: [check-latest-version, check-image-version]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set cloudflared versions
        id: set-local-env
        run: |
          echo CLOUDFLARED_CURRENT_VERSION=${{ needs.check-latest-version.outputs.CLOUDFLARED_CURRENT_VERSION }} >> $GITHUB_ENV
          echo CLOUDFLARED_IMAGE_VERSION=${{ needs.check-image-version.outputs.CLOUDFLARED_IMAGE_VERSION }} >> $GITHUB_ENV

      - name: Echo cloudflared versions
        id: echo-cloudflared-versions
        run: |
          echo Current version: ${{ env.CLOUDFLARED_CURRENT_VERSION }}
          echo Image version: ${{ env.CLOUDFLARED_IMAGE_VERSION }}

      - name: Log in to the Container registry
        uses: docker/login-action@master
        if: ${{ env.CLOUDFLARED_CURRENT_VERSION != env.CLOUDFLARED_IMAGE_VERSION }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        if: ${{ env.CLOUDFLARED_CURRENT_VERSION != env.CLOUDFLARED_IMAGE_VERSION }}
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
        if: ${{ env.CLOUDFLARED_CURRENT_VERSION != env.CLOUDFLARED_IMAGE_VERSION }}

      - name: Checkout repository
        uses: actions/checkout@master
        if: ${{ env.CLOUDFLARED_CURRENT_VERSION != env.CLOUDFLARED_IMAGE_VERSION }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@master
        if: ${{ env.CLOUDFLARED_CURRENT_VERSION != env.CLOUDFLARED_IMAGE_VERSION }}
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ env.CLOUDFLARED_CURRENT_VERSION }}
            ${{ env.DOCKER_FROM }}
            # set latest tag for main branch
            type=raw,value=latest,enable={{is_default_branch}} 
          labels: |
            cloudflared_version=${{ env.CLOUDFLARED_CURRENT_VERSION }}
            base_image=${{ env.DOCKER_FROM }}
            org.opencontainers.image.url=https://github.com/${{ env.IMAGE_NAME }}
            org.opencontainers.image.source=https://github.com/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@master 
        if: ${{ env.CLOUDFLARED_CURRENT_VERSION != env.CLOUDFLARED_IMAGE_VERSION }}
        with:
          platforms: linux/amd64,linux/arm64
          context: "{{defaultContext}}:cloudflared"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
